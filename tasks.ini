# ~/.config/nvim/tasks.ini

# last update: 2021-01-03 02:00

# https://github.com/skywind3000/asynctasks.vim
# https://github.com/skywind3000/asynctasks.vim/wiki/Task-Examples

# This file Contains tasks which is suitable for my work. for example tasks that
# are related to ros, embedded programming, c, c++, python, ... , and will be better
# and more complete as the time goes. note that this is very nice feature that can 
# produce the ros plugin for vim/neovim, just like the one we have in vscode.

[project-cmake-init]

command=sh ~/.config/nvim/task_scripts/cmake_ccpp_project_init.sh $(?Language) $(?project_name) $(?minimum_cmake_version:3.2)
cwd=$(VIM_CWD)
output=quickfix
errorformat=%f:%l:%m
silent=1
notify=echo

[project-cmake]

command=if [ -e compile_commands.json ]; then rm compile_commands.json; fi  && cd build && cmake .. && mv compile_commands.json .. && echo "run :CocRestart"
# note that you need to restart coc for new generated compile_commands.json file.
cwd=$(VIM_CWD)
output=quickfix
errorformat=%f:%l:%m
silent=1
notify=echo

[project-cmake-build]
command=cd build && cmake --build . --config $(?build_type:Debug)
cwd=$(VIM_CWD)
output=quickfix
errorformat=%f:%l:%m
save=2

[public-project-file-run]

command:c, cpp="$(VIM_CWD)/build/$(?executable_name:$(VIM_DIRNAME))"
command:python=python "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"

cwd=$(VIM_CWD)
output=terminal
save=2

[single-file-build:release]
command:c,cpp=gcc -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[single-file-build:debug]
command:c,cpp=gcc -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[single-file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:vim=:source %
output=terminal
cwd=$(VIM_FILEDIR)
save=2

[grep-word]
command=rg -n --no-heading --color never "$(?keyword)" "<root>" -tc -tcpp -tpy -tvim -tgo
cwd=$(VIM_ROOT)
errorformat=%f:%l:%m

[grep-cword]
command=rg -n --no-heading --color never "$(VIM_CWORD)" "<root>" -tc -tcpp -tpy -tvim -tgo 
cwd=$(VIM_ROOT)
errorformat=%f:%l:%m

# Generate Ctags Database
[gen-tags]
command=ctags -R -f tags . && echo "Dont't forget to run:" && echo ":set tags+=./tags;"
cwd=$(VIM_ROOT)

# Cscope database generation
# for more info go through:
# https://stackoverflow.com/questions/33676829/vim-configuration-for-linux-kernel-development
# http://cscope.sourceforge.net/cscope_vim_tutorial.html
# http://cscope.sourceforge.net/large_projects.html
[gen-cscope]
command=cscope -R -b && echo "run :cs add /path/to/your/cscope.out"
cwd=$(VIM_CWD)

[kernel-ctags-cscope]
command=make O=$(?database_path:.) ARCH=$(?architecture:x86_64) COMPILED_SOURCE=1 cscope tags && echo "run :cs add /path/to/your/kernel/cscope.out" && echo "run :set tags=/path/to/your/kernel/tags"
cwd=$(VIM_CWD)

[ros-workspace-init]
command=zsh ~/.config/nvim/task_scripts/ros_workspace_init.zsh
cwd=$(VIM-VIM_CWD)
silent=1
notify=echo

[ros-create-pkg]
command=zsh ~/.config/nvim/task_scripts/ros_create_pkg.zsh $(?package_name) $(?dependencies)
cwd=$(VIM_CWD)
silent=1
notify=echo

[ros-add-node]
command=zsh ~/.config/nvim/task_scripts/node_create.zsh $(?package_name) $(?PyOrCpp:cpp) $(?node_name)
cwd=$(VIM_CWD)
silent=1
notify=echo

[ros-catkin-make]
command=zsh ~/.config/nvim/task_scripts/ros_catkin_make.zsh
cwd=$(VIM_CWD)

[roscore-spawn]
command=roscore
cwd=$HOME
output=terminal
silent=1
notify=echo

[roscore-kill]
# does not work at the momment because of bug of the plugin
# Asyntasks.
command=killall -9 roscore; killall -9 rosmaster
cwd=$HOME
output=terminal
silent=1
notify=echo

# I think it is complete enough to start work. in future i will make it even better.
